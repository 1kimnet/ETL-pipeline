--- original/./etl/utils/regression_detector.py
+++ fixed/./etl/utils/regression_detector.py
@@ -384,7 +384,8 @@
             "total_operations_monitored": len(self.performance_data),
             "baselines_established": len(self.baselines),
             "regressions_by_severity": {
-                severity: len([r for r in recent_regressions if r.severity == severity])
+                severity: len(
+                    [r for r in recent_regressions if r.severity == severity])
                 for severity in ["minor", "moderate", "major", "critical"]
             },
             "operation_analysis": operation_analysis,
--- original/./etl/utils/retry.py
+++ fixed/./etl/utils/retry.py
@@ -402,7 +402,8 @@
             "total_successes": self.total_successes,
             "total_failures": self.total_failures,
             "success_rate": (
-                self.total_successes / (self.total_successes + self.total_failures)
+                self.total_successes /
+                (self.total_successes + self.total_failures)
             )
             * 100
             if (self.total_successes + self.total_failures) > 0
--- original/./etl/utils/adaptive_tuning.py
+++ fixed/./etl/utils/adaptive_tuning.py
@@ -43,8 +43,8 @@
             current_metrics: PerformanceMetrics,
             threshold: float = 0.2) -> bool:
         """Check if current performance is degraded compared to baseline."""
-        duration_increase = (current_metrics.duration - \
-                             self.avg_duration) / self.avg_duration # type: ignore
+        duration_increase = (current_metrics.duration -
+                             self.avg_duration) / self.avg_duration  # type: ignore
         throughput_decrease = (
             self.avg_throughput - current_metrics.throughput_items_per_sec) / self.avg_throughput
 
--- original/./etl/handlers/rest_api.py
+++ fixed/./etl/handlers/rest_api.py
@@ -375,7 +375,8 @@
                 if layer_detail:
                     layer_name = layer_detail.get("name", f"layer_{lid_str}")
                     layers_to_iterate_final.append(
-                        {"id": lid_str, "name": layer_name, "metadata": layer_detail}
+                        {"id": lid_str, "name": layer_name,
+                            "metadata": layer_detail}
                     )
                 else:
                     log.warning(
@@ -427,7 +428,8 @@
             fs_layer_name = service_meta.get(
                 "name", f"feature_layer_{fs_layer_id_str}")
             layers_to_iterate_final.append(
-                {"id": fs_layer_id_str, "name": fs_layer_name, "metadata": service_meta}
+                {"id": fs_layer_id_str, "name": fs_layer_name,
+                    "metadata": service_meta}
             )
 
         if not layers_to_iterate_final:
@@ -453,7 +455,8 @@
             for layer_info_to_query in layers_to_iterate_final:
                 self._fetch_layer_data(
                     layer_info=layer_info_to_query,
-                    layer_metadata_from_service=layer_info_to_query.get("metadata"),
+                    layer_metadata_from_service=layer_info_to_query.get(
+                        "metadata"),
                 )
 
     def _fetch_layers_concurrent(
